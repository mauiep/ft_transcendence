version: '3.8'

volumes:
  data:
  uploads:

networks:
  backend:

services:
  # NGINX
  nginx:
    container_name: nginx
    build: ./nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - back
      - postgres
    networks:
      - backend

  # POSTGRES
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - backend

  # BACKEND (Django)
  back:
    build: ./Transcendance_Back
    container_name: backend
    ports:
      - "4000:4000"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=Transcendance_Back.settings
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
